{"ast":null,"code":"/* const polz = document.body.querySelector('.filters-price-slider');\r\nconst left = polz.querySelector('.filters-price-slider__left-handler');\r\nconst right = polz.querySelector('.filters-price-slider__right-handler');\r\nconst way = polz.querySelector('.filters-price-slider__way');\r\n\r\n//const minPrice = document.body.querySelector('.price-input');\r\nconst input1 = document.body.querySelector('.filters-price-input__left-input');\r\nconst input2 = document.body.querySelector('.filters-price-input__right-input'); */\n\n/* const valid = input => !isNaN(Number(input.value)) && \r\n                              Number(input.value)>=3990 &&\r\n                              Number(input.value)<=139990;\r\n */\n\nexport default function Slider(doc, dispatch) {\n  const polz = doc.body.querySelector('.filters-price-slider');\n  const left = polz.querySelector('.filters-price-slider__left-handler');\n  const right = polz.querySelector('.filters-price-slider__right-handler');\n  //const way = polz.querySelector('.filters-price-slider__way');\n\n  //const minPrice = document.body.querySelector('.price-input');\n  const input1 = doc.body.querySelector('.filters-price-input__left-input');\n  const input2 = doc.body.querySelector('.filters-price-input__right-input');\n  let clampedLeft = false;\n  let clampedRight = false;\n  let lastX;\n  const minPrice = 3990;\n  const maxPrice = 139990;\n  function move(e) {\n    let r = parseInt(getComputedStyle(right).right); //позиция правого handler\n    let l = parseInt(getComputedStyle(left).left); //позиция левого handler\n    const invalidRelPos = () => {\n      //проверка находится ли правый ползунок левее левого\n      r = parseInt(getComputedStyle(right).right);\n      l = parseInt(getComputedStyle(left).left);\n      return l + r > box.width - 22;\n    };\n    //проверка идет ли правый ползунок вправо, а левый влево\n    const invalidDir = () => clampedLeft && e.clientX > lastX || clampedRight && e.clientX < lastX;\n    const box = polz.getBoundingClientRect();\n    if (e.clientX < box.left - 8) return null; //если левый ползунок выходит за рамки\n    if (e.clientX > box.left + box.width - 8) return null; //если правый ползунок выходит за рамки\n    if (invalidRelPos() && invalidDir()) return null; //если правый ползунок пытается перескачить за левый или наоборот\n    if (clampedLeft) {\n      //если зажат левый\n      //console.log(getComputedStyle(left).left+getComputedStyle(right).right);\n      left.style.left = Number(e.clientX - box.left) + 'px';\n      //если левый перескачил через правый - возвращаем обратно\n      if (invalidRelPos()) left.style.left = Number(box.width - 22 - r) + 'px';\n      r = parseInt(getComputedStyle(right).right);\n      l = parseInt(getComputedStyle(left).left);\n      input1.value = minPrice + Math.round((maxPrice - minPrice) / box.width * (l + 8));\n      dispatch({\n        type: 'changePriceFloor',\n        payload: Number(input1.value)\n      });\n    }\n    if (clampedRight) {\n      //если зажат правый\n      //console.log(getComputedStyle(left).left+getComputedStyle(right).right);\n      right.style.right = Number(box.left + box.width - e.clientX - 17) + 'px';\n      //если правый перескачил через левый - возвращаем обратно\n      if (invalidRelPos()) right.style.right = Number(box.width - 22 - l) + 'px';\n      r = parseInt(getComputedStyle(right).right);\n      l = parseInt(getComputedStyle(left).left);\n      input2.value = maxPrice - Math.round((maxPrice - minPrice) / box.width * (r + 8));\n      dispatch({\n        type: 'changePriceCeiling',\n        payload: Number(input2.value)\n      });\n    }\n    lastX = e.clientX; //предыдущее положение\n  }\n\n  left.addEventListener('mousedown', e => {\n    e.preventDefault();\n    clampedRight = false;\n    clampedLeft = true;\n  });\n  right.addEventListener('mousedown', e => {\n    e.preventDefault();\n    clampedLeft = false;\n    clampedRight = true;\n  });\n  doc.addEventListener('mousemove', move);\n  doc.addEventListener('mouseup', () => {\n    clampedLeft = clampedRight = false;\n  });\n}\n_c = Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["Slider","doc","dispatch","polz","body","querySelector","left","right","input1","input2","clampedLeft","clampedRight","lastX","minPrice","maxPrice","move","e","r","parseInt","getComputedStyle","l","invalidRelPos","box","width","invalidDir","clientX","getBoundingClientRect","style","Number","value","Math","round","type","payload","addEventListener","preventDefault","_c","$RefreshReg$"],"sources":["C:/Users/Артемий/Desktop/Учеба/НеУнивер/WEB/Projects/Pet/store/src/scripts/slider.js"],"sourcesContent":["/* const polz = document.body.querySelector('.filters-price-slider');\r\nconst left = polz.querySelector('.filters-price-slider__left-handler');\r\nconst right = polz.querySelector('.filters-price-slider__right-handler');\r\nconst way = polz.querySelector('.filters-price-slider__way');\r\n\r\n//const minPrice = document.body.querySelector('.price-input');\r\nconst input1 = document.body.querySelector('.filters-price-input__left-input');\r\nconst input2 = document.body.querySelector('.filters-price-input__right-input'); */\r\n\r\n/* const valid = input => !isNaN(Number(input.value)) && \r\n                              Number(input.value)>=3990 &&\r\n                              Number(input.value)<=139990;\r\n */\r\n\r\nexport default function Slider(doc, dispatch){\r\n    const polz = doc.body.querySelector('.filters-price-slider');\r\n    const left = polz.querySelector('.filters-price-slider__left-handler');\r\n    const right = polz.querySelector('.filters-price-slider__right-handler');\r\n    //const way = polz.querySelector('.filters-price-slider__way');\r\n\r\n    //const minPrice = document.body.querySelector('.price-input');\r\n    const input1 = doc.body.querySelector('.filters-price-input__left-input');\r\n    const input2 = doc.body.querySelector('.filters-price-input__right-input');\r\n\r\n    let clampedLeft = false;\r\n    let clampedRight = false;\r\n    let lastX;\r\n    const minPrice = 3990;\r\n    const maxPrice = 139990;\r\n    function move(e){\r\n        let r = parseInt(getComputedStyle(right).right);  //позиция правого handler\r\n        let l = parseInt(getComputedStyle(left).left);    //позиция левого handler\r\n        const invalidRelPos = () => {           //проверка находится ли правый ползунок левее левого\r\n            r = parseInt(getComputedStyle(right).right);\r\n            l = parseInt(getComputedStyle(left).left);\r\n            return l+r > box.width-22;\r\n        }\r\n        //проверка идет ли правый ползунок вправо, а левый влево\r\n        const invalidDir = () => (clampedLeft && (e.clientX>lastX)) || (clampedRight && (e.clientX<lastX))  \r\n\r\n        const box = polz.getBoundingClientRect();\r\n        if(e.clientX<box.left-8) return null;   //если левый ползунок выходит за рамки\r\n        if(e.clientX>box.left+box.width-8) return null;     //если правый ползунок выходит за рамки\r\n        if(invalidRelPos() && invalidDir()) return null;    //если правый ползунок пытается перескачить за левый или наоборот\r\n        if(clampedLeft){    //если зажат левый\r\n            //console.log(getComputedStyle(left).left+getComputedStyle(right).right);\r\n            left.style.left = Number(e.clientX - box.left)+'px';\r\n            //если левый перескачил через правый - возвращаем обратно\r\n            if(invalidRelPos()) left.style.left = Number(box.width-22-r)+'px';\r\n            r = parseInt(getComputedStyle(right).right);\r\n            l = parseInt(getComputedStyle(left).left);\r\n            input1.value = minPrice + Math.round((maxPrice-minPrice)/box.width*(l+8));\r\n            dispatch({type: 'changePriceFloor', payload: Number(input1.value)});\r\n        }\r\n        if(clampedRight){   //если зажат правый\r\n            //console.log(getComputedStyle(left).left+getComputedStyle(right).right);\r\n            right.style.right = Number(box.left + box.width - e.clientX-17)+'px';\r\n            //если правый перескачил через левый - возвращаем обратно\r\n            if(invalidRelPos()) right.style.right = Number(box.width-22-l)+'px';\r\n            r = parseInt(getComputedStyle(right).right);\r\n            l = parseInt(getComputedStyle(left).left);\r\n            input2.value = maxPrice - Math.round((maxPrice-minPrice)/box.width*(r+8));\r\n            dispatch({type: 'changePriceCeiling', payload: Number(input2.value)});\r\n        }\r\n        lastX=e.clientX;    //предыдущее положение\r\n    }\r\n\r\n    left.addEventListener('mousedown', (e)=>{\r\n        e.preventDefault();\r\n        clampedRight=false;\r\n        clampedLeft=true;\r\n    });\r\n    right.addEventListener('mousedown', (e)=>{\r\n        e.preventDefault();\r\n        clampedLeft=false;\r\n        clampedRight=true;\r\n    });\r\n\r\n    doc.addEventListener('mousemove', move);\r\n    doc.addEventListener('mouseup', ()=>{clampedLeft=clampedRight=false;});\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}